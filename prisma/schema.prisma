// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  USER
  ORGANISER
}

enum Sex {
  MALE
  FEMALE
}

enum SocialPlatform {
  FACEBOOK
  TWITTER
  INSTAGRAM
  SNAPCHAT
  WEBSITE
}

model User {
  userId     String    @id @default(auto()) @map("_id") @db.ObjectId
  userName   String
  fullName   String
  email      String    @unique
  city       String
  role       Role      @default(USER)
  password   String
  bio        String?
  phone      String?
  sex        Sex?
  avatar     String?
  idFrontPic String?
  idBackPic  String?
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  deletedAt  DateTime?

  @@index([userName])
}

model Socials {
  socialId String         @id @default(auto()) @map("_id") @db.ObjectId
  link     String
  platform SocialPlatform
}

model Degree {
  degreeId         String  @id @default(auto()) @map("_id") @db.ObjectId
  name             String
  school           String
  year             Int
  frontPic         String
  backPic          String
  verified         Boolean
  justification    String?
  justificationPic String?
}

model Bank {
  bankId         String @id @default(auto()) @map("_id") @db.ObjectId
  fullName       String
  cardNumber     String @unique
  expDate        String
  cvvlast4Digits String
}

model Category {
  categoryId String @id @default(auto()) @map("_id") @db.ObjectId
  name       String
  icon       String
}

model Tag {
  tagId String @id @default(auto()) @map("_id") @db.ObjectId
  name  String
  icon  String
  color String
}

model Activity {
  activityId  String    @id @default(auto()) @map("_id") @db.ObjectId
  coverPic    String
  title       String
  description String
  startTime   String
  endTime     String
  location    String
  startDay    String
  endDay      String
  seat        Int
  price       Float
  score       Float
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  deletedAt   DateTime?
}

model Post {
  postId      String    @id @default(auto()) @map("_id") @db.ObjectId
  bannerPic   String?
  description String
  likes       Int?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  deletedAt   DateTime?
}

model Background {
  bgId String @id @default(auto()) @map("_id") @db.ObjectId
  link String
  type String
}

model Reset {
  resetId   String   @id @default(auto()) @map("_id") @db.ObjectId
  token     String
  expiresAt DateTime
}

//removed younes commit
